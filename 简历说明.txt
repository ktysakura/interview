1.我是来自福建师范大学 信息工程专业的施雨涵
在大学期间，学习了操作系统，C/C++/java/pyhon，数据结构等，但是后来主要还是使用C和C++
大学18年毕业后就职于福州富昌维控电子科技有限公司，我是负责担任上位机开发的工作，一致延续至今年6月份

crud以及join group by 大概率会问存储引擎innodb maria MsSIAM 。需要了解四种隔离级别，三大范式，有些还会问到锁的隔离级别

tcp粘包:数据长度或者结尾标识符
mysql redis api 使用
lua api 使用
zeromq api 使用
protocol buf api 使用


lua和C互调都是通过lua虚拟机提供的虚拟栈
lua->C： 首先实现固定的C函数接口，获取接口上lua_state栈中的传入参数，再进行逻辑后,将处理结果压入栈中，返回给lua。最后把函数指针注册到lua的全局表中，再编译成动态库，
lua requrie "库名"，就可以开始调用接口

C->lua:打开lua vm 加载lua文件，根据函数名取出lua脚本中的函数压入栈中，再把数据压入栈中，最后调用lua_call后， 会返回给定个数的返回值

mysql和redis数据一致性
读：读redis->没有数据,读数据库->同步到redis，有的话直接返回
写：①写入redis缓存,直接返回；定期地将redis中数据同步到mysql中,可以做到多次更新,一次保存
       ②  先更新数据库，再更新缓存,如果缓存数据更新失败，会出现不一致.
             先删除缓存，后更新数据库。因为即使后面更新数据库失败了，缓存是空的，读的时候会从数据库中重新拉，虽然都是旧数据，但数据是一致的。
             但是修改数据库期间,另一个读请求来了，导致重新将数据库旧的数据读入redis缓存，后新的修改了数据库,导致数据不一致

         “修改DB”操作放入队列中，后读请求过来后，把更新redis缓存的操作放入同一个队列中